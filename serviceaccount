api server是管理控制的唯一路口  ingree service nodeport daemonset监听
3种 1 认证  网络k8s 正确的账号  HTTPS  SSL  
    2 授权  操作某些资源 RBAC
    3 准入控制  关，联到其他资源 级联操作 
都是插件的方式来完成何种 令牌认证  域共享秘钥token
http 协议的首部 ssl 认证
RBAC 基于角色的访问控制  许可
客户端---> API server
 user:username,uid
group:
extra:
API 资源
Request path
 /apis/apps/v1 v1beta1 v1beta2 支持多版本  
cat /root/.kube/conf
kubectl proxy 127.0.0.1 8080

kubectl proxy --prot=8080   
url监听  curl http://localhost:8080/api/v1/namespaces
序列化的jason html yaml
k8s  yaml先转成jason 
对象类
pod 上制定serviceaccount



httprestful get post put delete
API request verb:



resource
subresource
namespace
api group

pod  访问api ？ coredns 要不要通过api server 查看获取什么记录
dashboard  提供一个外部界面 通过一个流量器打开 pod去创建名称空间
pod 有pod 的网络 kubectl get svc
kubectl config都需要连到api server
[root@master ~]# kubectl config view 
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: DATA+OMITTED
    server: https://172.16.16.184:6443
  name: kubernetes
contexts:
- context:
    cluster: kubernetes
    user: kubernetes-admin
  name: kubernetes-admin@kubernetes
current-context: kubernetes-admin@kubernetes
kind: Config
preferences: {}
users:
- name: kubernetes-admin
  user:
    client-certificate-data: REDACTED
    client-key-data: REDACTED

一个kubectl 控制多个集群
